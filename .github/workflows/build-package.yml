name: Build package

on: [push]

jobs:
  build_wheel:
    runs-on: ubuntu-latest
    env:
      UTM_VERSION: 0.12.0
      MODULE: tmGrammar
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Install build dependecies
      run: |
        sudo apt-get install -y libboost-dev libboost-system-dev libboost-filesystem-dev libxerces-c-dev swig
    - name: Build utm
      env:
        BUILD_DIR: ${{ env.GITHUB_WORKSPACE }}/build
        UTM_BASE: ${{ env.GITHUB_WORKSPACE }}/dist/utm
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        curl -LO https://gitlab.cern.ch/cms-l1t-utm/utm/-/archive/utm_${{ env.UTM_VERSION }}/utm-utm_${{ env.UTM_VERSION }}.tar.gz
        tar xzf utm-utm_${{ env.UTM_VERSION }}.tar.gz
        cd utm-utm_${{ env.UTM_VERSION }}
        ./configure
        make all -j4 CPPFLAGS='-DNDEBUG -DSWIG'
        make install PREFIX=${{ env.UTM_BASE }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
    - name: Build wheel
      env:
        UTM_BASE: ${{ env.GITHUB_WORKSPACE }}/dist/utm
      run: |
        python -m build
        python -m pip install dist/*-linux_x86_64.whl
    - name: Test module
      env:
        LD_LIBRARY_PATH: ${{ env.GITHUB_WORKSPACE }}/dist/utm/lib
      run: |
        python -m ${{ env.MODULE }}.__init__
        python -c 'from ${{ env.MODULE }} import __version__; print(__version__); assert __version__ == ${{ env.UTM_VERSION }}'
